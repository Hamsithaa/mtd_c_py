MTD COMPETITIVE PROGRAMMING TRAINING

DAY1 THURSDAY 06-03-2025

STEPS TO INSTALL GITHUB 
1. Create new repository 
2. Give repository name 
3. Check readme check box
4. Create repository

IMPORTANT GIT COMMANDS

1. git status .. to know current status
2. git clone https://github.com/.... to dwnld other's repo
3. git pull origin main //command to download the updated repo 
from the server to the local machine(inside that dwnlded repo file)

TO MAKE OUR COMPUTER RECOGNISE OUR GIT ACC WE MUST RUN THESE TWO CONFIG COMMANDS

$ git config --global user.name "hamsithaa"
$ git config --global user.email "hamsithaa08@gmail.com"
--------------------------------------------------------------------------------------------

DAY2 FRIDAY 07-03-2025


crud
Dynamic memory-a
G-c stack based env
Dan rit
SRP

OOP
FUNCTIONAL PROGRAMMING= PROCE+OOP
MODERN C++ 11 14 ..


Arithmetic operators: + - * / % (binary operartors | input& ouputs are numbers)
in-fix notation= a+b format
pre-fix & post-fix
to perform any AO, DT of both operands must be same 

Left to right associtivity w.r.t reading the values/expressions
For the calc to happen, the user/programmer given infix expression must be converted to postfix
The operators have different hierarchy(Precedence)
====================================
fflush(stdin);

Relational operators: > < == != >= <=
I/p numbers   o/p true or false
Infix and left to right associtivity
Reabability
------------------------------------
Logical operators: & &&(short circuited and ) | ||(short circuited or) !
I/p and o/p bool
------------------------------------
5 steps to solve a problem

a.Understand,recognise
b.Find solution with all possible ways
c.Algorithm(each step must be atomic(srp),simple and finite)
d.Pseudocode
e.Code
--------------------------------
Hemachandra number
--------------------------------
stack pointer and frame pointer=0, i.e null --> program ends
--------------------------------------------------------------------------------------------------------------------------
DAY3 SATURDAY 08-03-2025

Modularity  | Procedural

Relative path | Absolute path

make file

-E  stops after pre-processing
-c Stops after compilation, gives object file('.o' extension)
-S creates assembly code
-o 
-------------------------------
Pointers
Pointer arithmetic
logical addresses
